// ------------------------------------------------------------------------------
//<autogenerated>
//        This code was generated by Microsoft Visual Studio Team System 2005.
//
//        Changes to this file may cause incorrect behavior and will be lost if
//        the code is regenerated.
//</autogenerated>
//------------------------------------------------------------------------------
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace TestProject
{
[System.Diagnostics.DebuggerStepThrough()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
internal class BaseAccessor {
    
    protected Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject m_privateObject;
    
    protected BaseAccessor(object target, Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType type) {
        m_privateObject = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateObject(target, type);
    }
    
    protected BaseAccessor(Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType type) : 
            this(null, type) {
    }
    
    internal virtual object Target {
        get {
            return m_privateObject.Target;
        }
    }
    
    public override string ToString() {
        return this.Target.ToString();
    }
    
    public override bool Equals(object obj) {
        if (typeof(BaseAccessor).IsInstanceOfType(obj)) {
            obj = ((BaseAccessor)(obj)).Target;
        }
        return this.Target.Equals(obj);
    }
    
    public override int GetHashCode() {
        return this.Target.GetHashCode();
    }
}


[System.Diagnostics.DebuggerStepThrough()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TestTools.UnitTestGeneration", "1.0.0.0")]
internal class Denisenko_Cutting_Converting_LC4ConvertorAccessor : BaseAccessor {
    
    protected static Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType m_privateType = new Microsoft.VisualStudio.TestTools.UnitTesting.PrivateType(typeof(global::Denisenko.Cutting.Converting.LC4Convertor));
    
    internal Denisenko_Cutting_Converting_LC4ConvertorAccessor(global::Denisenko.Cutting.Converting.LC4Convertor target) : 
            base(target, m_privateType) {
    }
    
    internal global::Denisenko.Cutting.LC4.LC4Document m_result {
        get {
            global::Denisenko.Cutting.LC4.LC4Document ret = ((global::Denisenko.Cutting.LC4.LC4Document)(m_privateObject.GetField("m_result")));
            return ret;
        }
        set {
            m_privateObject.SetField("m_result", value);
        }
    }
    
    internal void AddSections(global::System.Collections.Generic.List<global::Denisenko.Cutting.LC4.LC4Section> into, global::System.Collections.Generic.List<global::Denisenko.Cutting.Section> sections) {
        object[] args = new object[] {
                into,
                sections};
        m_privateObject.Invoke("AddSections", new System.Type[] {
                    typeof(global::System.Collections.Generic.List<global::Denisenko.Cutting.LC4.LC4Section>),
                    typeof(global::System.Collections.Generic.List<global::Denisenko.Cutting.Section>)}, args);
    }
    
    internal global::Denisenko.Cutting.LC4.LC4Section ConvertSection(global::Denisenko.Cutting.Section input, global::Denisenko.Cutting.Section prevSection, global::Denisenko.Cutting.Section nextSection) {
        object[] args = new object[] {
                input,
                prevSection,
				nextSection};
        global::Denisenko.Cutting.LC4.LC4Section ret = ((global::Denisenko.Cutting.LC4.LC4Section)(m_privateObject.Invoke("ConvertSection", new System.Type[] {
                    typeof(global::Denisenko.Cutting.Section),
                    typeof(global::Denisenko.Cutting.Section),
					typeof(global::Denisenko.Cutting.Section)}, args)));
        return ret;
    }
    
    internal static global::Denisenko.Cutting.LC4.LC4Numeric NumericFromDecimal(decimal value) {
        object[] args = new object[] {
                value};
        global::Denisenko.Cutting.LC4.LC4Numeric ret = ((global::Denisenko.Cutting.LC4.LC4Numeric)(m_privateType.InvokeStatic("NumericFromDecimal", new System.Type[] {
                    typeof(decimal)}, args)));
        return ret;
    }
}
}
